<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="RobotoCommonTextView">
        <attr name="typeface_common">
            <enum name="roboto_bold" value="0" />
            <enum name="roboto_medium" value="1" />
            <enum name="roboto_regular" value="2" />
            <enum name="roboto_light" value="3" />
            <enum name="roboto_thin" value="4" />
            <enum name="open_bold" value="5" />
            <enum name="open_regular" value="6" />
        </attr>
    </declare-styleable>
    <declare-styleable name="MaterialProgressBar">
        <!-- Style of progress drawable: horizontal or circular. Defaults to circular. -->
        <attr name="mpb_progressStyle" format="enum">
            <enum name="circular" value="0" />
            <enum name="horizontal" value="1" />
        </attr>
        <!--
          ~ Whether both determinate and indeterminate drawables should be set on this progress bar.
          ~ Determinate ring progress drawable is not supported yet. Defaults to false.
          -->
        <attr name="mpb_setBothDrawables" format="boolean" />
        <!-- Whether progress drawable should use its intrinsic padding. Defaults to true. -->
        <attr name="mpb_useIntrinsicPadding" format="boolean" />
        <!--
          ~ Whether progress drawable should show a track. Defaults to true for horizontal progress
          ~ drawable, false otherwise.
          -->
        <attr name="mpb_showTrack" format="boolean" />
        <attr name="android:tint" />
        <attr name="mpb_tintMode" format="enum">
            <enum name="src_over" value="3" />
            <enum name="src_in" value="5" />
            <enum name="src_atop" value="9" />
            <enum name="multiply" value="14" />
            <enum name="screen" value="15" />
            <enum name="add" value="16" />
        </attr>
    </declare-styleable>


    <declare-styleable name="CircularProgressBar">
        <attr name="cpb_hasShadow" format="boolean"/>
        <attr name="cpb_progressColor" format="string"/>
        <attr name="cpb_backgroundColor" format="string"/>
        <attr name="cpb_title" format="string"/>
        <attr name="cpb_titleColor" format="string"/>
        <attr name="cpb_subtitle" format="string"/>
        <attr name="cpb_subtitleColor" format="string"/>
        <attr name="cpb_strokeWidth" format="integer"/>
    </declare-styleable>
    <declare-styleable name="SettingsToggle">
        <attr name="text" format="string" />
        <attr name="textColor" format="string" />
        <attr name="prefName" format="string" />
        <attr name="oval_background_off" format="string" />
        <attr name="oval_background_on" format="string" />
    </declare-styleable>
    <declare-styleable name="JazzyViewPager">
        <attr name="style">
            <enum name="standard" value="0" />
            <enum name="tablet" value="1" />
            <enum name="cubein" value="2" />
            <enum name="cubeout" value="3" />
            <enum name="flipvertical" value="4" />
            <enum name="fliphorizontal" value="5" />
            <enum name="stack" value="6" />
            <enum name="zoomin" value="7" />
            <enum name="zoomout" value="8" />
            <enum name="rotateup" value="9" />
            <enum name="rotatedown" value="10" />
            <enum name="accordion" value="11" />
        </attr>
        <attr name="fadeEnabled" format="boolean" />
        <attr name="outlineEnabled" format="boolean" />
        <attr name="outlineColor" format="color|reference" />
    </declare-styleable>


    <declare-styleable name="AutofitTextView">
        <!-- Minimum size of the text. -->
        <attr name="minTextSize" format="dimension" />
        <!-- Amount of precision used to calculate the correct text size to fit within its
        bounds. Lower precision is more precise and takes more time. -->
        <attr name="precision" format="float" />
        <!-- Defines whether to automatically resize text to fit to the view's bounds. -->
        <attr name="sizeToFit" format="boolean" />
    </declare-styleable>


    <declare-styleable name="CircleImageView">
        <attr name="border_width" format="dimension" />
        <attr name="border_color" format="color" />
    </declare-styleable>
    <declare-styleable name="MyTextStyle">
        <attr name="newStyle" format="string"></attr>
    </declare-styleable>
    <declare-styleable name="WScratchView">
        <attr name="overlayColor" format="color" />
        <attr name="revealSize" format="dimension" />
        <attr name="antiAlias" format="boolean" />
        <attr name="scratchable" format="boolean" />
        <attr name="scratchDrawable" format="reference" />
    </declare-styleable>
    <declare-styleable name="CustomTextView">
        <attr name="text_style">
            <enum name="thin" value="0" />
            <enum name="light" value="1" />
            <enum name="medium" value="2" />
            <enum name="bold" value="3" />
            <enum name="none" value="4" />
        </attr>
    </declare-styleable>

    <declare-styleable name="LotteryEditText">
        <!-- The base color of the line and the texts. Default is black. -->
        <attr name="met_baseColor" format="color" />
        <!-- The highlight color of the line, and the floating label if the highlightFloatingLabel is true. -->
        <attr name="met_primaryColor" format="color" />
        <!-- How the floating label should be shown. Default is none -->
        <attr name="met_floatingLabel">
            <enum name="none" value="0" />
            <enum name="normal" value="1" />
            <enum name="highlight" value="2" />
        </attr>
        <!-- The color for when something is wrong.(e.g. exceeding max characters) -->
        <attr name="met_errorColor" format="color" />
        <!-- Min characters count limit. 0 means no limit. -->
        <attr name="met_minCharacters" format="integer" />
        <!-- max Characters count limit. 0 means no limit. -->
        <attr name="met_maxCharacters" format="integer" />
        <!-- Whether to show the bottom ellipsis in singleLine mode -->
        <attr name="met_singleLineEllipsis" format="boolean" />
        <!-- Reserved bottom text lines count, no matter if there is some helper/error text. -->
        <attr name="met_minBottomTextLines" format="integer" />
        <!-- Helper text at the bottom -->
        <attr name="met_helperText" format="string" />
        <!-- Helper text color -->
        <attr name="met_helperTextColor" format="color" />
        <!-- Font of the paint used to draw accent texts -->
        <attr name="met_accentTypeface" format="string" />
        <!-- Font used on view -->
        <attr name="met_typeface" format="string" />
        <!-- Custom float label text -->
        <attr name="met_floatingLabelText" format="string" />
        <!-- spacing between the main text and the floating label -->
        <attr name="met_floatingLabelPadding" format="dimension" />
        <!-- Hide underline -->
        <attr name="met_hideUnderline" format="boolean" />
        <!-- Underline's color -->
        <attr name="met_underlineColor" format="color" />
        <!-- Auto validate -->
        <attr name="met_autoValidate" format="boolean" />
        <!-- Left icon -->
        <attr name="met_iconLeft" format="reference" />
        <!-- Right icon -->
        <attr name="met_iconRight" format="reference" />
        <!-- Padding between icon(s) and the main area. 8dp by default. -->
        <attr name="met_iconPadding" format="dimension" />
        <!-- Clear button -->
        <attr name="met_clearButton" format="boolean" />
        <!-- The floating label's text size. 12sp by default. -->
        <attr name="met_floatingLabelTextSize" format="dimension" />
        <!-- The floating label's text color. -1 by default. -->
        <attr name="met_floatingLabelTextColor" format="color" />
        <!-- The bottom texts' size. 12sp by default. -->
        <attr name="met_bottomTextSize" format="dimension" />
        <!-- Always show the floating label, instead of animating it in/out. False by default. -->
        <attr name="met_floatingLabelAlwaysShown" format="boolean" />
        <!-- Always show the helper text, no matter if the edit text is focused. False by default. -->
        <attr name="met_helperTextAlwaysShown" format="boolean" />
        <!-- Whether use animation to show/hide the floating label. True by default. -->
        <attr name="met_floatingLabelAnimating" format="boolean" />
        <!-- Text color -->
        <attr name="met_textColor" format="color" />
        <!-- Hint Text Color -->
        <attr name="met_textColorHint" format="color" />
        <!-- Auto validate on focus lost. False by default. -->
        <attr name="met_validateOnFocusLost" format="boolean" />
        <!-- Whether check the characters count at the beginning it's shown. True by default. -->
        <attr name="met_checkCharactersCountAtBeginning" format="boolean" />

    </declare-styleable>
    <declare-styleable name="FloatingActionButton">
        <attr name="fab_colorPressed" format="color"/>
        <attr name="fab_colorDisabled" format="color"/>
        <attr name="fab_colorNormal" format="color"/>
        <attr name="fab_icon" format="reference"/>
        <attr name="fab_size" format="enum">
            <enum name="normal" value="0"/>
            <enum name="mini" value="1"/>
        </attr>
        <attr name="fab_title" format="string"/>
        <attr name="fab_stroke_visible" format="boolean"/>
    </declare-styleable>
    <declare-styleable name="AddFloatingActionButton">
        <attr name="fab_plusIconColor" format="color"/>
    </declare-styleable>
    <declare-styleable name="FloatingActionsMenu">
        <attr name="fab_addButtonColorPressed" format="color"/>
        <attr name="fab_addButtonColorNormal" format="color"/>
        <attr name="fab_addButtonSize" format="enum">
            <enum name="normal" value="0"/>
            <enum name="mini" value="1"/>
        </attr>
        <attr name="fab_addButtonPlusIconColor" format="color"/>
        <attr name="fab_addButtonStrokeVisible" format="boolean"/>
        <attr name="fab_labelStyle" format="reference"/>
        <attr name="fab_labelsPosition" format="enum">
            <enum name="left" value="0"/>
            <enum name="right" value="1"/>
        </attr>
        <attr name="fab_expandDirection" format="enum">
            <enum name="up" value="0"/>
            <enum name="down" value="1"/>
            <enum name="left" value="2"/>
            <enum name="right" value="3"/>
        </attr>
    </declare-styleable>

</resources>